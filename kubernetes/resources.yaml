apiVersion: apps/v1
kind: Deployment
metadata:
  name: restgdf_api-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: restgdf_api
  template:
    metadata:
      labels:
        app: restgdf_api
    spec:
      containers:
      - name: restgdf_api
        image: joshuasundance/restgdf_api:3.3.1
        imagePullPolicy: Always
        resources:
          requests:
            cpu: "100m"
            memory: "200Mi"
          limits:
            cpu: "500m"
            memory: "500Mi"
        securityContext:
          runAsNonRoot: true
---
apiVersion: v1
kind: Service
metadata:
  name: restgdf_api-service
  # configure on Azure and uncomment below to use a vnet
#  annotations:
#    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
#    service.beta.kubernetes.io/azure-load-balancer-ipv4: vnet.ip.goes.here
#    service.beta.kubernetes.io/azure-dns-label-name: "restgdf_api"
spec:
  selector:
    app: restgdf_api
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: restgdf_api-network-policy
spec:
  podSelector:
    matchLabels:
      app: restgdf_api
  policyTypes:
  - Ingress
  ingress:
  - from: []  # An empty array here means it will allow traffic from all sources.
    ports:
    - protocol: TCP
      port: 8080
